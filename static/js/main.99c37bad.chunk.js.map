{"version":3,"sources":["components/layout/BottomNav.js","store/Context.js","components/layout/TopBar.js","components/TaskCard.js","components/SmallDialog.js","components/pages/TaskListPage.js","components/ControlButton.js","helper/showNotif.js","components/pages/TaskPage.js","components/pages/ManualTimerPage.js","components/pages/SettingsPage.js","components/pages/AboutPage.js","Main.js","App.js","store/UseGlobalState.js","config/DBConfig.js","index.js"],"names":["useStyles","makeStyles","root","width","position","bottom","BottomNav","props","classes","React","useState","location","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","label","component","Link","to","icon","List","Timer","Context","createContext","theme","flexGrow","menuButton","marginRight","spacing","title","listItem","minWidth","TopBar","anchorEl","setAnchorEl","open","Boolean","useContext","state","actions","history","useHistory","handleClose","AppBar","Toolbar","IconButton","disabled","isPlay","edge","style","display","displayBack","color","aria-label","onClick","push","ArrowBack","Typography","variant","aria-controls","aria-haspopup","type","payload","oldTaskId","selectedTasks","length","Delete","currentTarget","MoreVert","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","ListItemIcon","fontSize","TaskCard","card","marginBottom","overlay","height","top","left","backgroundColor","opacity","includes","name","count","time","onEnd","e","enough","preventDefault","emptySelectedTask","index","indexOf","isSelected","splice","onStart","Card","CardActionArea","CardContent","SmallDialog","setOpen","updateTasks","handleSave","saveText","element","setElement","handleInputChange","settings","fieldType","target","useEffect","Fragment","TextField","autoFocus","margin","fullWidth","val","newTask","currentTime","pomodoroTime","status","isStart","settingsObj","parseInt","aria-labelledby","DialogTitle","DialogContent","DialogActions","Button","textAlign","img","fab","right","zIndex","TaskListPage","dialogOpen","setDialogOpen","TaskList","tasks","Grid","container","direction","justify","alignItems","alt","src","process","gutterBottom","map","task","key","Fab","Add","ControlButton","Icon","hide","nav","Box","click","borderRadius","borderColor","border","showNotif","start","notif","Notification","permission","end","options","body","navigator","serviceWorker","getRegistration","then","registration","showNotification","console","error","minHeight","timer","fontWeight","marginTop","TaskPage","setIsPlay","useParams","update","useIndexedDB","filter","ended","useRef","useSound","play","stop","playBeep","updateTask","updatedTask","updateCurrentTime","changeStatus","callback","forward","setTimeout","nextStatus","longBreak","pause","getTime","setTime","current","Minutes","Seconds","buttons","RewindIcon","backStatus","PlayIcon","PauseIcon","ResetIcon","ForwardIcon","undefined","setTitle","statusName","statusMessage","startImmediately","initialTime","lastUnit","formatValue","Chip","avatar","Avatar","buttonGroup","button","lineHeight","ManualTimerPage","manualTimer","reset","ButtonGroup","SettingsPage","setSettings","settingsList","valueLabel","SettingsMenu","setting","idx","Divider","ListItem","ListItemText","primary","secondary","Dialog","Switch","checked","darkMode","inputProps","AboutPage","Favorite","href","content","padding","paddingBottom","padding0","bottomNav","Main","useLocation","pathname","split","handleClickOutside","Content","CssBaseline","Container","clsx","my","exact","path","noMargin","App","createMuiTheme","palette","main","red","grey","ThemeProvider","initDB","version","objectStoresMeta","store","storeConfig","keyPath","autoIncrement","storeSchema","keypath","Index","getAll","add","deleteRecord","JSON","parse","localStorage","getItem","pomodoroTimeSetting","statusMessageSetting","darkModeSetting","pomodoro","shortBreak","setState","setItem","stringify","i","log","forEach","taskId","action","useGlobalState","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99c37bad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\r\nimport { List as ListIcon, Timer as TimerIcon} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 'calc(100vw)',\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n  },\r\n});\r\n\r\nexport default function BottomNav(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(props.location);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={handleChange}\r\n      showLabels={true}\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction\r\n        label=\"Task List\"\r\n        value=\"\"\r\n        component={Link}\r\n        to={\"/\"}\r\n        icon={<ListIcon />}\r\n      />\r\n      <BottomNavigationAction\r\n        label=\"Manual Timer\"\r\n        value=\"timer\"\r\n        component={Link}\r\n        to={\"/timer\"}\r\n        icon={<TimerIcon />}\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst Context = createContext({});\r\n\r\nexport default Context;","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MoreVert,\r\n  Delete,\r\n  ArrowBack,\r\n  Settings as SettingIcon,\r\n  Info as AboutIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Context from \"../../store/Context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  listItem: {\r\n    minWidth: \"36px\",\r\n  },\r\n}));\r\n\r\nexport default function TopBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const { state, actions } = useContext(Context);\r\n  const history = useHistory();\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const openSettings = () => {\r\n    handleClose();\r\n    history.push(\"/settings\");\r\n  };\r\n\r\n  const openAbout = () => {\r\n    handleClose();\r\n    history.push(\"/about\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    actions({\r\n      type: \"setState\",\r\n      payload: {\r\n        ...state,\r\n        oldTaskId: state.selectedTasks,\r\n        selectedTasks: [],\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleBack = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar>\r\n        <Toolbar>\r\n          <IconButton\r\n            disabled={props.isPlay}\r\n            edge=\"start\"\r\n            style={{ display: props.displayBack ? \"\" : \"none\" }}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleBack}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {props.title}\r\n          </Typography>\r\n          <div>\r\n            <IconButton\r\n              aria-label=\"delete\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleDelete}\r\n              color=\"inherit\"\r\n              style={{\r\n                display: state.selectedTasks.length == 0 ? \"none\" : \"\",\r\n              }}\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label=\"menu\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n              style={{\r\n                display:\r\n                  state.selectedTasks.length != 0 || props.displayBack\r\n                    ? \"none\"\r\n                    : \"\",\r\n              }}\r\n            >\r\n              <MoreVert />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={open}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={openSettings}>\r\n                <ListItemIcon className={classes.listItem}>\r\n                  <SettingIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                Settings\r\n              </MenuItem>\r\n              <MenuItem onClick={openAbout}>\r\n                <ListItemIcon className={classes.listItem}>\r\n                  <AboutIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                About\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  CardContent,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ClickNHold from \"react-click-n-hold\";\r\nimport Context from \"../store/Context\";\r\n\r\nexport default function TaskCard(props) {\r\n  const { state, actions } = useContext(Context);\r\n  const useStyles = makeStyles({\r\n    card: {\r\n      marginBottom: \"1em\",\r\n      width: \"100%\",\r\n    },\r\n    overlay: {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      backgroundColor: \"black\",\r\n      opacity: state.selectedTasks.includes(props.id) ? 0.1 : 0,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const { name, count } = props;\r\n  const history = useHistory();\r\n\r\n  const handleEndLongPress = (e, enough) => {\r\n    e.preventDefault();\r\n    var selectedTasks = state.selectedTasks;\r\n    const emptySelectedTask = state.selectedTasks.length == 0;\r\n    const index = selectedTasks.indexOf(props.id);\r\n    const isSelected = index > -1;\r\n    if (enough || (!emptySelectedTask && !isSelected)) {\r\n      if (!selectedTasks.includes(props.id)) {\r\n        selectedTasks.push(props.id);\r\n        actions({\r\n          type: \"setState\",\r\n          payload: { ...state, selectedTasks: selectedTasks },\r\n        });\r\n      }\r\n    } else {\r\n      if (emptySelectedTask) {\r\n        history.push(props.to);\r\n      } else {\r\n        if (isSelected) {\r\n          selectedTasks.splice(index, 1);\r\n          actions({\r\n            type: \"setState\",\r\n            payload: { ...state, selectedTasks: selectedTasks },\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStartLongPress = (e) => {};\r\n\r\n  return (\r\n    <ClickNHold\r\n      time={0.25}\r\n      onEnd={handleEndLongPress}\r\n      onStart={handleStartLongPress}\r\n    >\r\n      <Card className={classes.card}>\r\n        <CardActionArea>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {name}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{count} pomodoro</Typography>\r\n          </CardContent>\r\n          <div className={classes.overlay}></div>\r\n        </CardActionArea>\r\n      </Card>\r\n    </ClickNHold>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Context from \"../store/Context\";\r\n\r\nexport default function SmallDialog(props) {\r\n  const { open, setOpen, type } = props;\r\n  const [value, setValue] = React.useState(\"\");\r\n  const { state, actions, updateTasks } = useContext(Context);\r\n  const [element, setElement] = React.useState({\r\n    title: null,\r\n    component: null,\r\n    handleSave: null,\r\n    saveText: null,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setValue(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    if (type == \"settings\") {\r\n      if (props.settings.fieldType == \"number\") {\r\n        if (e.target.value < 100 && e.target.value > 0) {\r\n          setValue(e.target.value);\r\n        } else {\r\n          setValue(\"\");\r\n        }\r\n      } else {\r\n        if (e.target.value.length <= 48) {\r\n          setValue(e.target.value);\r\n        }\r\n      }\r\n    } else {\r\n      if (e.target.value.length <= 18) {\r\n        setValue(e.target.value);\r\n      }\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    switch (type) {\r\n      case \"newTask\":\r\n        setElement({\r\n          title: \"New Task\",\r\n          component: ({ value }) => (\r\n            <React.Fragment>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Task Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n                value={value}\r\n                onChange={handleInputChange}\r\n              />\r\n            </React.Fragment>\r\n          ),\r\n          saveText: \"Create\",\r\n          handleSave: (val) => {\r\n            actions({\r\n              type: \"setState\",\r\n              payload: {\r\n                ...state,\r\n                newTask: {\r\n                  name: val,\r\n                  count: 0,\r\n                  currentTime: state.settings.pomodoroTime[\"pomdoro\"],\r\n                  status: \"pomodoro\",\r\n                  isStart: 0\r\n                },\r\n              },\r\n            });\r\n            handleClose();\r\n          },\r\n        });\r\n        break;\r\n      case \"settings\":\r\n        const { settings } = props;\r\n        setValue(\r\n          settings.value\r\n        );\r\n        setElement({\r\n          title: settings.label,\r\n          component: ({ value }) => (\r\n            <React.Fragment>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id={settings.name}\r\n                label={settings.label}\r\n                type={settings.fieldType}\r\n                fullWidth\r\n                value={value}\r\n                onChange={handleInputChange}\r\n              />\r\n            </React.Fragment>\r\n          ),\r\n          saveText: \"Save\",\r\n          handleSave: (val) => {\r\n            const settingsObj = { ...state.settings };\r\n            settingsObj[settings.name][settings.id] = settings.fieldType == \"number\" ? parseInt(val) : val;\r\n            actions({\r\n              type: \"setState\",\r\n              payload: {\r\n                ...state,\r\n                settings: settingsObj,\r\n              },\r\n            });\r\n            updateTasks();\r\n            handleClose();\r\n          },\r\n        });\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">{element.title}</DialogTitle>\r\n      <DialogContent>\r\n        <element.component value={value} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={value == \"\"}\r\n          onClick={() => element.handleSave(value)}\r\n          color=\"primary\"\r\n        >\r\n          {element.saveText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport TaskCard from \"../TaskCard\";\r\nimport Context from \"../../store/Context\";\r\nimport { Grid, Typography, Fab } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\nimport SmallDialog from \"../SmallDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"calc(100vh - 125px)\",\r\n    textAlign: \"center\",\r\n  },\r\n  img: {\r\n    width: \"10em\",\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(9),\r\n    right: theme.spacing(2),\r\n    zIndex: \"2\",\r\n  },\r\n}));\r\n\r\nexport default function TaskListPage() {\r\n  const classes = useStyles();\r\n  const { state } = React.useContext(Context);\r\n  const [dialogOpen, setDialogOpen] = React.useState(false);\r\n\r\n  const TaskList = () => {\r\n    if (state.tasks.length == 0) {\r\n      return (\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.root}\r\n        >\r\n          <img alt=\"no-data\"\r\n            src={process.env.PUBLIC_URL + \"/assets/no-data.png\"}\r\n            className={classes.img}\r\n          />\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"subtitle1\"\r\n            style={{ opacity: 0.75 }}\r\n          >\r\n            No Current Task\r\n          </Typography>\r\n        </Grid>\r\n      );\r\n    } else {\r\n      return state.tasks.map((task, index) => {\r\n        return (\r\n          <TaskCard\r\n            key={task.id}\r\n            id={task.id}\r\n            name={task.name}\r\n            count={task.count}\r\n            to={\"/task/\" + task.id}\r\n          />\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleFab = () => {\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TaskList/>\r\n      <Fab\r\n        className={classes.fab}\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        onClick={handleFab}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <SmallDialog open={dialogOpen} setOpen={setDialogOpen} type=\"newTask\" />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { IconButton, Box } from \"@material-ui/core\";\r\n\r\nexport default function ControlButton(props) {\r\n  const Icon = props.icon;\r\n\r\n  if (props.hide) return null;\r\n  if (props.nav) {\r\n      return (\r\n        <Box>\r\n          <IconButton disabled={props.nav.disabled} style={{opacity: props.nav.disabled ? .5 : 1}}>\r\n            <Icon color=\"secondary\" onClick={props.click} />\r\n          </IconButton>\r\n        </Box>\r\n      )\r\n  } else {\r\n    return (\r\n        <Box borderRadius=\"50%\" borderColor=\"primary.main\" border={1} margin={1}>\r\n          <IconButton>\r\n            <Icon fontSize=\"large\" color=\"primary\" onClick={props.click} />\r\n          </IconButton>\r\n        </Box>\r\n      );\r\n  }\r\n}\r\n","export function showNotif(status, start, notif) {\r\n  if (Notification.permission === \"granted\") {\r\n    let { title, body } = start ? notif[status].start : notif[status].end;\r\n\r\n    const options = {\r\n      body: body,\r\n    };\r\n\r\n    navigator.serviceWorker.getRegistration().then(function (registration) {\r\n      registration.showNotification(title, options);\r\n    });\r\n  } else {\r\n    console.error(\"Notification denied\");\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Context from \"../../store/Context\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  PlayArrow as PlayIcon,\r\n  Pause as PauseIcon,\r\n  Replay as ResetIcon,\r\n  FastForward as ForwardIcon,\r\n  FastRewind as RewindIcon,\r\n} from \"@material-ui/icons\";\r\nimport Timer from \"react-compound-timer\";\r\nimport ControlButton from \"../ControlButton\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport { useIndexedDB } from \"react-indexed-db\";\r\nimport { showNotif } from \"../../helper/showNotif\";\r\nimport useSound from \"use-sound\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: \"calc(100vh - 134px)\",\r\n    textAlign: \"center\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n  },\r\n  timer: {\r\n    width: \"100%\",\r\n    fontSize: \"6em\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  count: {\r\n    marginTop: \"2em\",\r\n  },\r\n});\r\n\r\nexport default function TaskPage(props) {\r\n  const { state, updateTasks } = React.useContext(Context);\r\n  const classes = useStyles();\r\n  const [error] = React.useState(false);\r\n  const [isPlay, setIsPlay] = React.useState(false);\r\n  const id = useParams().id;\r\n  const { update } = useIndexedDB(\"tasks\");\r\n  const task = state.tasks.filter((task) => {\r\n    return task.id == id;\r\n  })[0];\r\n  const ended = React.useRef(false);\r\n  const alarm = \"https://mqad21.github.io/pomodoro/assets/alarm.mp3\";\r\n  const beep = \"https://mqad21.github.io/pomodoro/assets/beep.mp3\";\r\n\r\n  const [play, { stop }] = useSound(alarm);\r\n  const [playBeep] = useSound(beep);\r\n\r\n  const updateTask = (updatedTask) => {\r\n    update(updatedTask).then((e) => {\r\n      updateTasks();\r\n    });\r\n  };\r\n\r\n  const updateCurrentTime = (time, isStart) => {\r\n    if (time < 0) time = 0;\r\n    const updatedTask = {\r\n      ...task,\r\n      id: parseInt(id),\r\n      currentTime: time,\r\n      isStart: isStart,\r\n    };\r\n    updateTask(updatedTask);\r\n  };\r\n\r\n  const changeStatus = (to, callback, forward) => {\r\n    stop();\r\n    let count;\r\n    if (forward) {\r\n      count =\r\n        to != \"pomodoro\" ? parseInt(task.count) + 1 : parseInt(task.count);\r\n    } else {\r\n      count =\r\n        to == \"pomodoro\" ? parseInt(task.count) - 1 : parseInt(task.count);\r\n    }\r\n\r\n    updateTask({\r\n      ...task,\r\n      id: parseInt(id),\r\n      currentTime: state.settings.pomodoroTime[to],\r\n      status: to,\r\n      count: count,\r\n      isStart: 0,\r\n    });\r\n    setTimeout(() => {\r\n      callback(state.settings.pomodoroTime[to] * 60 * 1000);\r\n    }, 200);\r\n  };\r\n\r\n  const nextStatus = (callback) => {\r\n    const longBreak = (task.count + 1) % 4 == 0;\r\n    if (task.status == \"pomodoro\") {\r\n      if (longBreak) {\r\n        changeStatus(\"longBreak\", callback, true);\r\n      } else {\r\n        changeStatus(\"shortBreak\", callback, true);\r\n      }\r\n    } else {\r\n      changeStatus(\"pomodoro\", callback, true);\r\n    }\r\n  };\r\n\r\n  const backStatus = (callback) => {\r\n    const longBreak = task.count % 4 == 0;\r\n    if (task.status == \"pomodoro\") {\r\n      if (longBreak) {\r\n        changeStatus(\"longBreak\", callback, false);\r\n      } else {\r\n        changeStatus(\"shortBreak\", callback, false);\r\n      }\r\n    } else {\r\n      changeStatus(\"pomodoro\", callback, false);\r\n    }\r\n  };\r\n\r\n  const timer = ({ start, pause, stop, getTime, setTime }) => {\r\n    if (getTime() < 0 && !ended.current) {\r\n      setTimeout(() => {\r\n        play();\r\n      }, 500);\r\n      play();\r\n      ended.current = true;\r\n      setIsPlay(false);\r\n      nextStatus(setTime);\r\n      showNotif(task.status, false, state.settings.notif);\r\n    }\r\n\r\n    const handleStart = () => {\r\n      playBeep();\r\n      ended.current = false;\r\n      start();\r\n      setIsPlay(true);\r\n      showNotif(task.status, true, state.settings.notif);\r\n    };\r\n\r\n    const handleReset = () => {\r\n      const time = state.settings.pomodoroTime[task.status];\r\n      updateCurrentTime(time, 0);\r\n      setTime(time * 60 * 1000);\r\n      setIsPlay(false);\r\n    };\r\n\r\n    const handlePause = () => {\r\n      updateCurrentTime(getTime() / (60 * 1000), 1);\r\n      setIsPlay(false);\r\n      pause();\r\n    };\r\n\r\n    const handleNext = () => {\r\n      nextStatus(setTime);\r\n    };\r\n\r\n    const handleBack = () => {\r\n      backStatus(setTime);\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card className={classes.card} variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography className={classes.timer}>\r\n              <Timer.Minutes />\r\n              {\":\"}\r\n              <Timer.Seconds />\r\n            </Typography>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.buttons}\r\n            >\r\n              <ControlButton\r\n                hide={isPlay}\r\n                icon={RewindIcon}\r\n                click={handleBack}\r\n                nav={{ disabled: task.count == 0 }}\r\n              />\r\n              <ControlButton\r\n                hide={isPlay}\r\n                icon={PlayIcon}\r\n                click={handleStart}\r\n              />\r\n              <ControlButton\r\n                hide={!isPlay}\r\n                icon={PauseIcon}\r\n                click={handlePause}\r\n              />\r\n              <ControlButton\r\n                hide={isPlay}\r\n                icon={ResetIcon}\r\n                click={handleReset}\r\n              />\r\n              <ControlButton\r\n                hide={isPlay}\r\n                icon={ForwardIcon}\r\n                click={handleNext}\r\n                nav={{ disabled: false }}\r\n              />\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  if (error) return <Redirect to=\"/\" />;\r\n\r\n  if (task == undefined) return null;\r\n\r\n  props.setTitle(task.name);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <React.Fragment>\r\n        <Card className={classes.card} variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography variant=\"h4\">\r\n              {state.settings.statusName[task.status]}\r\n            </Typography>\r\n            <Typography variant=\"subtitle\" color=\"textSecondary\">\r\n              {state.settings.statusMessage[task.status]}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n        <Timer\r\n          startImmediately={false}\r\n          initialTime={task == undefined ? 0 : task.currentTime * 60 * 1000}\r\n          direction=\"backward\"\r\n          lastUnit=\"m\"\r\n          formatValue={(value) => `${value < 10 ? `0${value}` : value}`}\r\n        >\r\n          {timer}\r\n        </Timer>\r\n        <Chip\r\n          color=\"primary\"\r\n          avatar={<Avatar>{task.count}</Avatar>}\r\n          label=\"Pomodoro\"\r\n          className={classes.count}\r\n        />\r\n      </React.Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Context from \"../../store/Context\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  ButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  PlayArrow as PlayIcon,\r\n  Pause as PauseIcon,\r\n  Replay as ResetIcon,\r\n} from \"@material-ui/icons\";\r\nimport ControlButton from \"../ControlButton\";\r\nimport Timer from \"react-compound-timer\";\r\nimport { showNotif } from \"../../helper/showNotif\";\r\nimport useSound from 'use-sound';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: \"calc(100vh - 134px)\",\r\n    textAlign: \"center\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n  },\r\n  timer: {\r\n    width: \"100%\",\r\n    fontSize: \"6em\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  buttonGroup: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n  button: {\r\n    lineHeight: 1.2,\r\n  },\r\n});\r\n\r\nexport default function ManualTimerPage() {\r\n  const classes = useStyles();\r\n  const { state, actions } = React.useContext(Context);\r\n  const manualTimer = state.manualTimer;\r\n  const [isPlay, setIsPlay] = React.useState(false);\r\n  const ended = React.useRef(false);\r\n  const alarm = 'https://mqad21.github.io/pomodoro/assets/alarm.mp3';\r\n  const beep = 'https://mqad21.github.io/pomodoro/assets/beep.mp3';\r\n\r\n  const [play] = useSound(alarm);\r\n  const [playBeep] = useSound(beep);\r\n\r\n  const updateCurrentTime = (time, isStart) => {\r\n    if (time < 0) time = 0;\r\n    actions({\r\n      type: \"setState\",\r\n      payload: {\r\n        ...state,\r\n        manualTimer: {\r\n          ...manualTimer,\r\n          currentTime: time,\r\n          isStart: isStart,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const changeStatus = (status) => {\r\n    if (manualTimer.status != status) {\r\n      actions({\r\n        type: \"setState\",\r\n        payload: {\r\n          ...state,\r\n          manualTimer: {\r\n            ...manualTimer,\r\n            status: status,\r\n            currentTime: state.settings.pomodoroTime[status],\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const timer = ({ start, reset, pause, stop, getTime, setTime }) => {\r\n    if (getTime() < 0 && !ended.current) {\r\n      play();\r\n      ended.current = true;\r\n      setIsPlay(false);\r\n      showNotif(manualTimer.status, false, state.settings.notif);\r\n      reset();\r\n    }\r\n\r\n    const handleStart = () => {\r\n      playBeep();\r\n      ended.current = false;\r\n      start();\r\n      setIsPlay(true);\r\n      showNotif(manualTimer.status, true, state.settings.notif);\r\n    };\r\n\r\n    const handleReset = () => {\r\n      const time = state.settings.pomodoroTime[manualTimer.status];\r\n      updateCurrentTime(time, 0);\r\n      setTime(time*60*1000);\r\n      setIsPlay(false);\r\n    };\r\n\r\n    const handlePause = () => {\r\n      updateCurrentTime(getTime() / (60*1000), 1);\r\n      setIsPlay(false);\r\n      pause();\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card className={classes.card} variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography className={classes.timer}>\r\n              <Timer.Minutes />\r\n              {\":\"}\r\n              <Timer.Seconds />\r\n            </Typography>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.buttons}\r\n            >\r\n              <ControlButton\r\n                hide={isPlay}\r\n                icon={PlayIcon}\r\n                click={handleStart}\r\n              />\r\n              <ControlButton\r\n                hide={!isPlay}\r\n                icon={PauseIcon}\r\n                click={handlePause}\r\n              />\r\n              <ControlButton\r\n                hide={isPlay}\r\n                icon={ResetIcon}\r\n                click={handleReset}\r\n              />\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const toPomodoro = () => {\r\n    changeStatus(\"pomodoro\");\r\n  };\r\n\r\n  const toShortBreak = () => {\r\n    changeStatus(\"shortBreak\");\r\n  };\r\n\r\n  const toLongBreak = () => {\r\n    changeStatus(\"longBreak\");\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <Card className={classes.card} variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography variant=\"h4\">\r\n            {state.settings.statusName[manualTimer.status]}\r\n          </Typography>\r\n          <Typography variant=\"subtitle\" color=\"textSecondary\">\r\n            {state.settings.statusMessage[manualTimer.status]}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Timer\r\n        startImmediately={false}\r\n        initialTime={\r\n          manualTimer == undefined ? 0 : manualTimer.currentTime * 60 * 1000\r\n        }\r\n        direction=\"backward\"\r\n        lastUnit=\"m\"\r\n        formatValue={(value) => `${value < 10 ? `0${value}` : value}`}\r\n      >\r\n        {timer}\r\n      </Timer>\r\n      <ButtonGroup\r\n        className={classes.buttonGroup}\r\n        color=\"primary\"\r\n        aria-label=\"outlined primary button group\"\r\n      >\r\n        <Button\r\n          onClick={toPomodoro}\r\n          variant={manualTimer.status == \"pomodoro\" ? \"contained\" : \"outlined\"}\r\n          className={classes.button}\r\n        >\r\n          Pomodoro\r\n        </Button>\r\n        <Button\r\n          onClick={toShortBreak}\r\n          variant={\r\n            manualTimer.status == \"shortBreak\" ? \"contained\" : \"outlined\"\r\n          }\r\n          className={classes.button}\r\n        >\r\n          Short Break\r\n        </Button>\r\n        <Button\r\n          onClick={toLongBreak}\r\n          variant={manualTimer.status == \"longBreak\" ? \"contained\" : \"outlined\"}\r\n          className={classes.button}\r\n        >\r\n          Long Break\r\n        </Button>\r\n      </ButtonGroup>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Grid,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\nimport SmallDialog from \"../SmallDialog\";\r\nimport Context from \"../../store/Context\";\r\n\r\nexport default function SettingsPage(props) {\r\n  props.setTitle(\"Settings\");\r\n  const { state, actions } = React.useContext(Context);\r\n  const [dialogOpen, setDialogOpen] = React.useState(false);\r\n  const [settings, setSettings] = React.useState(null);\r\n\r\n  const handleMenu = (menu) => {\r\n    setSettings(menu);\r\n  };\r\n\r\n  const settingsList = [\r\n    {\r\n      id: \"pomodoro\",\r\n      name: \"pomodoroTime\",\r\n      label: \"Pomodoro Time\",\r\n      valueLabel: state.settings.pomodoroTime[\"pomodoro\"] + \" minutes\",\r\n      value: state.settings.pomodoroTime[\"pomodoro\"],\r\n      fieldType: \"number\",\r\n    },\r\n    {\r\n      id: \"shortBreak\",\r\n      name: \"pomodoroTime\",\r\n      label: \"Short Break Time\",\r\n      valueLabel: state.settings.pomodoroTime[\"shortBreak\"] + \" minutes\",\r\n      value: state.settings.pomodoroTime[\"shortBreak\"],\r\n      fieldType: \"number\",\r\n    },\r\n    {\r\n      id: \"longBreak\",\r\n      name: \"pomodoroTime\",\r\n      label: \"Long Break Time\",\r\n      valueLabel: state.settings.pomodoroTime[\"longBreak\"] + \" minutes\",\r\n      value: state.settings.pomodoroTime[\"longBreak\"],\r\n      fieldType: \"number\",\r\n    },\r\n    {\r\n      id: \"pomodoro\",\r\n      name: \"statusMessage\",\r\n      label: \"Pomodoro Message\",\r\n      valueLabel: state.settings.statusMessage[\"pomodoro\"],\r\n      value: state.settings.statusMessage[\"pomodoro\"],\r\n      fieldType: \"text\",\r\n    },\r\n    {\r\n      id: \"shortBreak\",\r\n      name: \"statusMessage\",\r\n      label: \"Short Break Message\",\r\n      valueLabel: state.settings.statusMessage[\"shortBreak\"],\r\n      value: state.settings.statusMessage[\"shortBreak\"],\r\n      fieldType: \"text\",\r\n    },\r\n    {\r\n      id: \"longBreak\",\r\n      name: \"statusMessage\",\r\n      label: \"Long Break Message\",\r\n      valueLabel: state.settings.statusMessage[\"longBreak\"],\r\n      value: state.settings.statusMessage[\"longBreak\"],\r\n      fieldType: \"text\",\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    if (settings != null) {\r\n      setDialogOpen(true);\r\n    }\r\n  }, [settings]);\r\n\r\n  const handleDarkMode = (e) => {\r\n    actions({\r\n      type: \"setState\",\r\n      payload: {\r\n        ...state,\r\n        settings: {\r\n          ...state.settings,\r\n          darkMode: e.target.checked ? 1 : 0,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const SettingsMenu = () =>\r\n    settingsList.map((setting, idx) => {\r\n      return (\r\n        <React.Fragment>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={setting.label}\r\n              secondary={setting.valueLabel}\r\n              onClick={() => handleMenu(setting)}\r\n            />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n\r\n  const Dialog = () => {\r\n    if (settings == null) {\r\n      return null;\r\n    }\r\n    return (\r\n      <SmallDialog\r\n        open={dialogOpen}\r\n        setOpen={setDialogOpen}\r\n        type=\"settings\"\r\n        settings={settings}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <List>\r\n        <ListItem>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <ListItemText primary=\"Dark Mode\" />\r\n            <Switch\r\n              checked={state.settings.darkMode}\r\n              onChange={handleDarkMode}\r\n              color=\"primary\"\r\n              name=\"darkMode\"\r\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n            />\r\n          </Grid>\r\n        </ListItem>\r\n        <SettingsMenu />\r\n      </List>\r\n      <Dialog />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid, Link } from \"@material-ui/core\";\r\nimport { Favorite as FavoriteIcon } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: \"calc(100vh - 134px)\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default function AboutPage(props) {\r\n  const classes = useStyles();\r\n\r\n  props.setTitle(\"About\");\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <React.Fragment>\r\n        <Typography variant=\"h6\">About Pomodoro Timer</Typography>\r\n        <Typography variant=\"body1\" color=\"textSecondary\">\r\n          Pomodoro Timer is a web app that can assist you to manage your time using pomodoro technique. Thank you for using this app. May Allah bless you :)\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body1\"\r\n          style={{ marginTop: \"2em\" }}\r\n          color=\"textSecondary\"\r\n        >\r\n          Made with <FavoriteIcon fontSize=\"small\" color=\"primary\"/> by <Link href=\"https://instagram.com/mqad21\" variant=\"body1\">\r\n            @mqad21\r\n          </Link>\r\n        </Typography>\r\n      </React.Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport BottomNav from \"./components/layout/BottomNav\";\r\nimport TopBar from \"./components/layout/TopBar\";\r\nimport { Container, Box, CssBaseline } from \"@material-ui/core\";\r\nimport TaskListPage from \"./components/pages/TaskListPage\";\r\nimport TaskPage from \"./components/pages/TaskPage\";\r\nimport ManualTimerPage from \"./components/pages/ManualTimerPage\";\r\nimport SettingsPage from \"./components/pages/SettingsPage\";\r\nimport AboutPage from \"./components/pages/AboutPage\";\r\nimport Context from \"./store/Context\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    backgroundColor: \"primary\",\r\n    flexGrow: 1,\r\n    marginTop: \"56px\",\r\n    padding: theme.spacing(3),\r\n    paddingBottom: \"56px\",\r\n    minHeight: \"calc(100vh - 56px)\",\r\n  },\r\n  padding0: {\r\n    padding: 0,\r\n  },\r\n  bottomNav: {\r\n    marginTop: \"28px\",\r\n  },\r\n}));\r\n\r\nexport default function Main() {\r\n  const classes = useStyles();\r\n  const { state, actions } = React.useContext(Context);\r\n  const location = useLocation().pathname.split(\"/\")[1];\r\n  const displayBack = [\"task\", \"settings\", \"about\"].includes(location);\r\n  const [title, setTitle] = React.useState(\"Pomodoro Timer\");\r\n  const [isPlay, setIsPlay] = React.useState(false);\r\n\r\n  const handleClickOutside = () => {\r\n    if (state.selectedTasks.length !== 0) {\r\n      actions({\r\n        type: \"setState\",\r\n        payload: {\r\n          ...state,\r\n          selectedTasks: [],\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const Content = (props) => {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <Container\r\n          className={clsx(\r\n            classes.content,\r\n            { [classes.padding0]: location === \"settings\" },\r\n            { [classes.bottomNav]: props.bottomNav }\r\n          )}\r\n          onClick={handleClickOutside}\r\n        >\r\n          <Box my={2}>{props.component}</Box>\r\n        </Container>\r\n        {props.bottomNav ? <BottomNav location={location} /> : null}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getTitle = () => {\r\n    if (![\"\", \"timer\"].includes(location)) {\r\n      return title;\r\n    } else {\r\n      return \"Pomodoro Timer\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TopBar isPlay={isPlay} displayBack={displayBack} title={getTitle()} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Content\r\n            bottomNav={true}\r\n            component={<TaskListPage />}\r\n            noMargin={false}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/timer\">\r\n          <Content\r\n            bottomNav={true}\r\n            component={<ManualTimerPage />}\r\n            noMargin={false}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/task/:id\">\r\n          <Content\r\n            bottomNav={false}\r\n            component={<TaskPage setIsPlay={setIsPlay} setTitle={setTitle} noMargin={false} />}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/settings\">\r\n          <Content\r\n            bottomNav={false}\r\n            component={<SettingsPage setTitle={setTitle} noMargin={true} />}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/about\">\r\n          <Content\r\n            bottomNav={false}\r\n            component={<AboutPage setTitle={setTitle} noMargin={false} />}\r\n          />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Main from \"./Main\";\nimport \"./App.css\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport red from '@material-ui/core/colors/red';\nimport grey from '@material-ui/core/colors/grey';\nimport Context from \"./store/Context\";\n\nfunction App() {\n  const {state} = React.useContext(Context);\n\n  const theme = createMuiTheme({\n    palette: {\n      type: state.settings.darkMode == 1 ? 'dark' : 'light',\n      primary: {\n        main: state.settings.darkMode == 1 ? red[400] : red[600],\n      },\n      secondary: {\n        main: grey[700],\n      },\n    },\n  });\n\n  return (\n    <Router>\n        <ThemeProvider theme={theme}>\n          <Main />\n        </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\nimport { useIndexedDB } from \"react-indexed-db\";\r\nimport { initDB } from \"react-indexed-db\";\r\nimport { DBConfig } from \"../config/DBConfig\";\r\n\r\ninitDB(DBConfig);\r\n\r\nexport default function useGlobalState() {\r\n  const { getAll, add, deleteRecord, update } = useIndexedDB(\"tasks\");\r\n\r\n  const settings = JSON.parse(localStorage.getItem(\"settings\")) || {};\r\n\r\n  const pomodoroTimeSetting = settings.pomodoroTime || {};\r\n  const statusMessageSetting = settings.statusMessage || {};\r\n  const darkModeSetting = settings.darkMode || 0;\r\n\r\n  const [state, setState] = useState({\r\n    tasks: [],\r\n    newTask: null,\r\n    oldTaskId: null,\r\n    selectedTasks: [],\r\n    manualTimer: JSON.parse(localStorage.getItem(\"manualTimer\")) || {\r\n      status: \"pomodoro\",\r\n      currentTime: pomodoroTimeSetting[\"pomodoro\"] || 25,\r\n      isStart: 0,\r\n    },\r\n    settings: {\r\n      pomodoroTime: {\r\n        pomodoro: pomodoroTimeSetting[\"pomodoro\"] || 25,\r\n        shortBreak: pomodoroTimeSetting[\"shortBreak\"] || 5,\r\n        longBreak: pomodoroTimeSetting[\"longBreak\"] || 10,\r\n      },\r\n      statusName: {\r\n        pomodoro: \"Pomodoro\",\r\n        shortBreak: \"Short Break\",\r\n        longBreak: \"Long Break\",\r\n      },\r\n      statusMessage: {\r\n        pomodoro: statusMessageSetting[\"pomodoro\"] || \"Let's start and become productive.\",\r\n        shortBreak: statusMessageSetting[\"shortBreak\"] || \"Good job! let's take a short break.\",\r\n        longBreak: statusMessageSetting[\"longBreak\"] || \"Awesome! let's take a long break.\",\r\n      },\r\n      notif: {\r\n        pomodoro: {\r\n          start: {\r\n            title: \"Pomodoro timer is set\",\r\n            body: \"Keep focus, dude!\",\r\n          },\r\n          end: {\r\n            title: \"Pomodoro timer has ended\",\r\n            body: \"Take a break, dude!\",\r\n          },\r\n        },\r\n        shortBreak: {\r\n          start: {\r\n            title: \"Short break timer is set\",\r\n            body: \"Have fun, dude!\",\r\n          },\r\n          end: {\r\n            title: \"Short break timer has ended\",\r\n            body: \"Let's back work!\",\r\n          },\r\n        },\r\n        longBreak: {\r\n          start: {\r\n            title: \"Long break timer is set\",\r\n            body: \"Be happy, dude!\",\r\n          },\r\n          end: {\r\n            title: \"Long break timer has ended\",\r\n            body: \"Keep spirit!\",\r\n          },\r\n        },\r\n      },\r\n      darkMode: darkModeSetting\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"settings\", {\r\n      ...settings,\r\n      darkMode: state.settings.darkMode\r\n    });\r\n  }, [state.settings.darkMode]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"settings\", JSON.stringify(state.settings));\r\n  }, [state.settings]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"manualTimer\", JSON.stringify(state.manualTimer));\r\n  }, [state.manualTimer]);\r\n\r\n  const updateTasks = () => {\r\n    getAll().then((tasks) => {\r\n      for (let i = 0; i < tasks.length; i++) {\r\n        if (tasks[i].isStart == 0) {\r\n          tasks[i].currentTime = state.settings.pomodoroTime[tasks[i].status];\r\n        }\r\n      }\r\n      const currentTime =\r\n        state.manualTimer.isStart == 0\r\n          ? state.settings.pomodoroTime[state.manualTimer.status]\r\n          : state.manualTimer.currentTime;\r\n      setState({\r\n        ...state,\r\n        tasks: tasks,\r\n        manualTimer: {\r\n          ...state.manualTimer,\r\n          currentTime,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateTasks();\r\n  }, []);\r\n\r\n  //update task\r\n  useEffect(() => {\r\n    if (state.updatedTask != null) {\r\n      update({ ...state.updatedTask }).then(\r\n        (event) => {\r\n          console.log(\"ID Generated: \", event.target);\r\n          getAll().then((tasks) => {\r\n            setState({ ...state, updatedTask: null, tasks: tasks });\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  }, [state.updatedTask]);\r\n\r\n  //insert new task\r\n  useEffect(() => {\r\n    if (state.newTask != null) {\r\n      add({ ...state.newTask }).then(\r\n        (event) => {\r\n          console.log(\"ID Generated: \", event.target);\r\n          getAll().then((tasks) => {\r\n            setState({ ...state, newTask: null, tasks: tasks });\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  }, [state.newTask]);\r\n\r\n  //delete task\r\n  useEffect(() => {\r\n    if (state.oldTaskId != null) {\r\n      state.oldTaskId.forEach((taskId) => {\r\n        deleteRecord(taskId);\r\n        getAll().then((tasks) => {\r\n          setState({ ...state, oldTaskId: null, tasks: tasks });\r\n        });\r\n      });\r\n    }\r\n  }, [state.oldTaskId]);\r\n\r\n  const actions = (action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case \"setState\":\r\n        return setState(payload);\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  return { state, actions, updateTasks };\r\n}\r\n","export const DBConfig = {\r\n  name: \"Pomodoro\",\r\n  version: 4,\r\n  objectStoresMeta: [\r\n    {\r\n      store: \"tasks\",\r\n      storeConfig: { keyPath: \"id\", autoIncrement: true },\r\n      storeSchema: [\r\n        { name: \"name\", keypath: \"name\" },\r\n        { name: \"count\", keypath: \"count\" },\r\n        { name: \"currentTime\", keypath: \"currentTime\" },\r\n        { name: \"status\", keypath: \"status\" },\r\n        { name: \"isStart\", keypath: \"isStart\" },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Context from \"./store/Context\";\nimport useGlobalState from \"./store/UseGlobalState\";\n\nconst Index = () => {\n  const store = useGlobalState();\n  return (\n    <Context.Provider value={store}>\n      <App />\n    </Context.Provider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}