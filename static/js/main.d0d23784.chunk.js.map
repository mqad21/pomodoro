{"version":3,"sources":["components/layout/BottomNav.js","store/Context.js","components/layout/TopBar.js","components/TaskCard.js","components/SmallDialog.js","components/pages/TaskListPage.js","components/ControlButton.js","helper/showNotif.js","components/pages/TaskPage.js","components/pages/ManualTimerPage.js","components/pages/SettingsPage.js","components/pages/AboutPage.js","Main.js","App.js","serviceWorker.js","store/UseGlobalState.js","config/DBConfig.js","index.js"],"names":["useStyles","makeStyles","root","width","position","bottom","BottomNav","props","classes","React","useState","location","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","label","component","Link","to","icon","List","Timer","Context","createContext","theme","flexGrow","menuButton","marginRight","spacing","title","listItem","minWidth","TopBar","auth","anchorEl","setAnchorEl","open","Boolean","useContext","state","actions","history","useHistory","handleClose","AppBar","Toolbar","IconButton","disabled","isPlay","edge","style","display","displayBack","color","aria-label","onClick","push","ArrowBack","Typography","variant","aria-controls","aria-haspopup","type","payload","oldTaskId","selectedTasks","length","Delete","currentTarget","MoreVert","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","ListItemIcon","fontSize","TaskCard","card","marginBottom","overlay","height","top","left","backgroundColor","opacity","includes","name","count","time","onEnd","e","enough","preventDefault","emptySelectedTask","index","indexOf","isSelected","splice","onStart","Card","CardActionArea","CardContent","SmallDialog","setOpen","updateTasks","handleSave","saveText","element","setElement","handleInputChange","settings","fieldType","target","useEffect","console","log","idMenu","Fragment","TextField","autoFocus","margin","fullWidth","val","newTask","currentTime","pomodoroTime","status","isStart","settingsObj","parseInt","aria-labelledby","DialogTitle","DialogContent","DialogActions","Button","textAlign","img","fab","right","zIndex","TaskListPage","useTheme","dialogOpen","setDialogOpen","TaskList","tasks","Grid","container","direction","justify","alignItems","src","process","gutterBottom","map","task","key","Fab","Add","hide","ControlButton","Icon","nav","Box","click","borderRadius","borderColor","border","showNotif","start","notif","Notification","permission","end","options","body","navigator","serviceWorker","getRegistration","then","registration","showNotification","error","minHeight","timer","fontWeight","marginTop","TaskPage","setIsPlay","useParams","update","useIndexedDB","filter","ended","useRef","useSound","play","stop","playBeep","updateTask","stopBeeb","updatedTask","updateCurrentTime","changeStatus","callback","forward","setTimeout","nextStatus","longBreak","pause","getTime","setTime","current","Minutes","Seconds","buttons","RewindIcon","backStatus","PlayIcon","PauseIcon","ResetIcon","ForwardIcon","undefined","setTitle","statusName","statusMessage","startImmediately","initialTime","lastUnit","formatValue","Chip","avatar","Avatar","buttonGroup","button","lineHeight","ManualTimerPage","manualTimer","ButtonGroup","SettingsPage","setSettings","settingsList","valueLabel","SettingsMenu","setting","idx","Divider","ListItem","ListItemText","primary","secondary","Dialog","Switch","checked","darkMode","inputProps","AboutPage","Favorite","href","content","padding","paddingBottom","padding0","bottomNav","Main","useLocation","pathname","split","handleClickOutside","Content","CssBaseline","Container","clsx","my","exact","path","noMargin","App","createMuiTheme","palette","main","red","grey","ThemeProvider","window","hostname","match","initDB","version","objectStoresMeta","store","storeConfig","keyPath","autoIncrement","storeSchema","keypath","Index","getAll","add","deleteRecord","JSON","parse","localStorage","getItem","pomodoroTimeSetting","statusMessageSetting","darkModeSetting","pomodoro","shortBreak","setState","setItem","stringify","i","forEach","taskId","action","useGlobalState","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0d23784.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\r\nimport { List as ListIcon, Timer as TimerIcon} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 'calc(100vw)',\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n  },\r\n});\r\n\r\nexport default function BottomNav(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(props.location);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={handleChange}\r\n      showLabels={true}\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction\r\n        label=\"Task List\"\r\n        value=\"\"\r\n        component={Link}\r\n        to={\"/\"}\r\n        icon={<ListIcon />}\r\n      />\r\n      <BottomNavigationAction\r\n        label=\"Manual Timer\"\r\n        value=\"timer\"\r\n        component={Link}\r\n        to={\"/timer\"}\r\n        icon={<TimerIcon />}\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst Context = createContext({});\r\n\r\nexport default Context;","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MoreVert,\r\n  Delete,\r\n  ArrowBack,\r\n  Settings as SettingIcon,\r\n  Info as AboutIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Context from \"../../store/Context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  listItem: {\r\n    minWidth: \"36px\",\r\n  },\r\n}));\r\n\r\nexport default function TopBar(props) {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const { state, actions } = useContext(Context);\r\n  const history = useHistory();\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const openSettings = () => {\r\n    handleClose();\r\n    history.push(\"/settings\")\r\n  };\r\n\r\n  const openAbout = () => {\r\n    handleClose();\r\n    history.push(\"/about\")\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    actions({\r\n      type: \"setState\",\r\n      payload: {\r\n        ...state,\r\n        oldTaskId: state.selectedTasks,\r\n        selectedTasks: [],\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleBack = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar>\r\n        <Toolbar>\r\n          <IconButton\r\n            disabled={props.isPlay}\r\n            edge=\"start\"\r\n            style={{ display: props.displayBack ? \"\" : \"none\" }}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleBack}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {props.title}\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"delete\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleDelete}\r\n                color=\"inherit\"\r\n                style={{\r\n                  display: state.selectedTasks.length == 0 ? \"none\" : \"\",\r\n                }}\r\n              >\r\n                <Delete />\r\n              </IconButton>\r\n              <IconButton\r\n                aria-label=\"menu\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n                style={{\r\n                  display:\r\n                    state.selectedTasks.length != 0 || props.displayBack\r\n                      ? \"none\"\r\n                      : \"\",\r\n                }}\r\n              >\r\n                <MoreVert />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                  <MenuItem onClick={openSettings}>\r\n                    <ListItemIcon className={classes.listItem}>\r\n                      <SettingIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    Settings\r\n                  </MenuItem>\r\n                  <MenuItem onClick={openAbout}>\r\n                    <ListItemIcon className={classes.listItem}>\r\n                      <AboutIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    About\r\n                  </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  CardContent,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ClickNHold from \"react-click-n-hold\";\r\nimport Context from \"../store/Context\";\r\n\r\nexport default function TaskCard(props) {\r\n  const { state, actions } = useContext(Context);\r\n  const useStyles = makeStyles({\r\n    card: {\r\n      marginBottom: \"1em\",\r\n      width: \"100%\",\r\n    },\r\n    overlay: {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      backgroundColor: \"black\",\r\n      opacity: state.selectedTasks.includes(props.id) ? 0.1 : 0,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const { name, count } = props;\r\n  const history = useHistory();\r\n\r\n  const handleEndLongPress = (e, enough) => {\r\n    e.preventDefault();\r\n    var selectedTasks = state.selectedTasks;\r\n    const emptySelectedTask = state.selectedTasks.length == 0;\r\n    const index = selectedTasks.indexOf(props.id);\r\n    const isSelected = index > -1;\r\n    if (enough || (!emptySelectedTask && !isSelected)) {\r\n      if (!selectedTasks.includes(props.id)) {\r\n        selectedTasks.push(props.id);\r\n        actions({\r\n          type: \"setState\",\r\n          payload: { ...state, selectedTasks: selectedTasks },\r\n        });\r\n      }\r\n    } else {\r\n      if (emptySelectedTask) {\r\n        history.push(props.to);\r\n      } else {\r\n        if (isSelected) {\r\n          selectedTasks.splice(index, 1);\r\n          actions({\r\n            type: \"setState\",\r\n            payload: { ...state, selectedTasks: selectedTasks },\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStartLongPress = (e) => {};\r\n\r\n  return (\r\n    <ClickNHold\r\n      time={0.25}\r\n      onEnd={handleEndLongPress}\r\n      onStart={handleStartLongPress}\r\n    >\r\n      <Card className={classes.card}>\r\n        <CardActionArea>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {name}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{count} pomodoro</Typography>\r\n          </CardContent>\r\n          <div className={classes.overlay}></div>\r\n        </CardActionArea>\r\n      </Card>\r\n    </ClickNHold>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Context from \"../store/Context\";\r\n\r\nexport default function SmallDialog(props) {\r\n  const { open, setOpen, type } = props;\r\n  const [value, setValue] = React.useState(\"\");\r\n  const { state, actions, updateTasks } = useContext(Context);\r\n  const [element, setElement] = React.useState({\r\n    title: null,\r\n    component: null,\r\n    handleSave: null,\r\n    saveText: null,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setValue(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    if (type == \"settings\") {\r\n      if (props.settings.fieldType == \"number\") {\r\n        if (e.target.value < 100 && e.target.value > 0) {\r\n          setValue(e.target.value);\r\n        } else {\r\n          setValue(\"\");\r\n        }\r\n      } else {\r\n        if (e.target.value.length <= 48) {\r\n          setValue(e.target.value);\r\n        }\r\n      }\r\n    } else {\r\n      if (e.target.value.length <= 18) {\r\n        setValue(e.target.value);\r\n      }\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log(props.idMenu);\r\n    switch (type) {\r\n      case \"newTask\":\r\n        setElement({\r\n          title: \"New Task\",\r\n          component: ({ value }) => (\r\n            <React.Fragment>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Task Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n                value={value}\r\n                onChange={handleInputChange}\r\n              />\r\n            </React.Fragment>\r\n          ),\r\n          saveText: \"Create\",\r\n          handleSave: (val) => {\r\n            actions({\r\n              type: \"setState\",\r\n              payload: {\r\n                ...state,\r\n                newTask: {\r\n                  name: val,\r\n                  count: 0,\r\n                  currentTime: state.settings.pomodoroTime[\"pomodoro\"],\r\n                  status: \"pomodoro\",\r\n                  isStart: 0\r\n                },\r\n              },\r\n            });\r\n            handleClose();\r\n          },\r\n        });\r\n        break;\r\n      case \"settings\":\r\n        const { settings } = props;\r\n        setValue(\r\n          settings.value\r\n        );\r\n        setElement({\r\n          title: settings.label,\r\n          component: ({ value }) => (\r\n            <React.Fragment>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id={settings.name}\r\n                label={settings.label}\r\n                type={settings.fieldType}\r\n                fullWidth\r\n                value={value}\r\n                onChange={handleInputChange}\r\n              />\r\n            </React.Fragment>\r\n          ),\r\n          saveText: \"Save\",\r\n          handleSave: (val) => {\r\n            const settingsObj = { ...state.settings };\r\n            settingsObj[settings.name][settings.id] = settings.fieldType == \"number\" ? parseInt(val) : val;\r\n            actions({\r\n              type: \"setState\",\r\n              payload: {\r\n                ...state,\r\n                settings: settingsObj,\r\n              },\r\n            });\r\n            updateTasks();\r\n            handleClose();\r\n          },\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">{element.title}</DialogTitle>\r\n      <DialogContent>\r\n        <element.component value={value} />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          disabled={value == \"\"}\r\n          onClick={() => element.handleSave(value)}\r\n          color=\"primary\"\r\n        >\r\n          {element.saveText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport TaskCard from \"../TaskCard\";\r\nimport Context from \"../../store/Context\";\r\nimport { Grid, Typography, Fab } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\nimport SmallDialog from \"../SmallDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"calc(100vh - 125px)\",\r\n    textAlign: \"center\",\r\n  },\r\n  img: {\r\n    width: \"10em\",\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(9),\r\n    right: theme.spacing(2),\r\n    zIndex: \"2\",\r\n  },\r\n}));\r\n\r\nexport default function TaskListPage() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { state, actions } = React.useContext(Context);\r\n  const [dialogOpen, setDialogOpen] = React.useState(false);\r\n\r\n  const TaskList = () => {\r\n    if (state.tasks.length == 0) {\r\n      return (\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.root}\r\n        >\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/assets/no-data.png\"}\r\n            className={classes.img}\r\n          />\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"subtitle1\"\r\n            style={{ opacity: 0.75 }}\r\n          >\r\n            No Current Task\r\n          </Typography>\r\n        </Grid>\r\n      );\r\n    } else {\r\n      return state.tasks.map((task, index) => {\r\n        return (\r\n          <TaskCard\r\n            key={task.id}\r\n            id={task.id}\r\n            name={task.name}\r\n            count={task.count}\r\n            to={\"/task/\" + task.id}\r\n          />\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleFab = () => {\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TaskList/>\r\n      <Fab\r\n        className={classes.fab}\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        onClick={handleFab}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <SmallDialog open={dialogOpen} setOpen={setDialogOpen} type=\"newTask\" />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { IconButton, Box } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport default function ControlButton(props) {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const Icon = props.icon;\r\n\r\n  if (props.hide) return null;\r\n  if (props.nav) {\r\n      return (\r\n        <Box>\r\n          <IconButton disabled={props.nav.disabled} style={{opacity: props.nav.disabled ? .5 : 1}}>\r\n            <Icon color=\"secondary\" onClick={props.click} />\r\n          </IconButton>\r\n        </Box>\r\n      )\r\n  } else {\r\n    return (\r\n        <Box borderRadius=\"50%\" borderColor=\"primary.main\" border={1} margin={1}>\r\n          <IconButton>\r\n            <Icon fontSize=\"large\" color=\"primary\" onClick={props.click} />\r\n          </IconButton>\r\n        </Box>\r\n      );\r\n  }\r\n}\r\n","export function showNotif(status, start, notif) {\r\n  if (Notification.permission === \"granted\") {\r\n    let { title, body } = start ? notif[status].start : notif[status].end;\r\n\r\n    const options = {\r\n      body: body,\r\n    };\r\n\r\n    navigator.serviceWorker.getRegistration().then(function (registration) {\r\n      registration.showNotification(title, options);\r\n    });\r\n  } else {\r\n    console.error(\"Notification denied\");\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Context from \"../../store/Context\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  PlayArrow as PlayIcon,\r\n  Pause as PauseIcon,\r\n  Replay as ResetIcon,\r\n  FastForward as ForwardIcon,\r\n  FastRewind as RewindIcon,\r\n} from \"@material-ui/icons\";\r\nimport Timer from \"react-compound-timer\";\r\nimport ControlButton from \"../ControlButton\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport { useIndexedDB } from \"react-indexed-db\";\r\nimport { showNotif } from \"../../helper/showNotif\";\r\nimport useSound from 'use-sound';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"calc(100vh - 134px)\",\r\n    textAlign: \"center\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n  },\r\n  timer: {\r\n    width: \"100%\",\r\n    fontSize: \"6em\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  count: {\r\n    marginTop: \"2em\",\r\n  },\r\n}));\r\n\r\nexport default function TaskPage(props) {\r\n  const { state, updateTasks } = React.useContext(Context);\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const [error,] = React.useState(false);\r\n  const [isPlay, setIsPlay] = React.useState(false);\r\n  const id = useParams().id;\r\n  const { update } = useIndexedDB(\"tasks\");\r\n  const task = state.tasks.filter((task)=>{\r\n    return task.id == id;\r\n  })[0];\r\n  console.log(task);\r\n  const ended = React.useRef(false);\r\n  const alarm = 'https://mqad21.github.io/pomodoro/assets/alarm.mp3';\r\n  const beep = 'https://mqad21.github.io/pomodoro/assets/beep.mp3';\r\n\r\n  const [play, { stop }] = useSound(alarm);\r\n  const [playBeep, { stopBeeb }] = useSound(beep);\r\n  \r\n  const updateTask = (updatedTask) => {\r\n    update(updatedTask).then((e) => {\r\n      updateTasks();\r\n    });\r\n  };\r\n\r\n  const updateCurrentTime = (time, isStart) => {\r\n    if (time < 0) time = 0;\r\n    const updatedTask = {\r\n      ...task,\r\n      id: parseInt(id),\r\n      currentTime: time,\r\n      isStart: isStart\r\n    };\r\n    updateTask(updatedTask);\r\n  };\r\n\r\n  const changeStatus = (to, callback, forward) => {\r\n    stop();\r\n    let count;\r\n    if (forward) {\r\n      count =\r\n        to != \"pomodoro\" ? parseInt(task.count) + 1 : parseInt(task.count);\r\n    } else {\r\n      count =\r\n        to == \"pomodoro\" ? parseInt(task.count) - 1 : parseInt(task.count);\r\n    }\r\n\r\n    updateTask({\r\n      ...task,\r\n      id: parseInt(id),\r\n      currentTime: state.settings.pomodoroTime[to],\r\n      status: to,\r\n      count: count,\r\n      isStart: 0,\r\n    });\r\n    setTimeout(() => {\r\n      callback(state.settings.pomodoroTime[to]*60*1000);\r\n    }, 200);\r\n  };\r\n\r\n  const nextStatus = (callback) => {\r\n    const longBreak = (task.count + 1) % 4 == 0;\r\n    console.log(longBreak);\r\n    if (task.status == \"pomodoro\") {\r\n      if (longBreak) {\r\n        changeStatus(\"longBreak\", callback, true);\r\n      } else {\r\n        changeStatus(\"shortBreak\", callback, true);\r\n      }\r\n    } else {\r\n      changeStatus(\"pomodoro\", callback, true);\r\n    }\r\n  };\r\n\r\n  const backStatus = (callback) => {\r\n    const longBreak = (task.count) % 4 == 0;\r\n    if (task.status == \"pomodoro\") {\r\n      if (longBreak) {\r\n        changeStatus(\"longBreak\", callback, false);\r\n      } else {\r\n        changeStatus(\"shortBreak\", callback, false);\r\n      }\r\n    } else {\r\n      changeStatus(\"pomodoro\", callback, false);\r\n    }\r\n  };\r\n\r\n  const timer = ({ start, pause, stop, getTime, setTime }) => {\r\n    if (getTime() < 0 && !ended.current) {\r\n      play();\r\n      ended.current = true;\r\n      setIsPlay(false);\r\n      nextStatus(setTime);\r\n      showNotif(task.status, false,state.settings.notif);\r\n    }\r\n\r\n    const handleStart = () => {\r\n      playBeep();\r\n      stop();\r\n      ended.current = false;\r\n      start();\r\n      setIsPlay(true);\r\n      showNotif(task.status, true,state.settings.notif);\r\n    };\r\n\r\n    const handleReset = () => {\r\n      const time = state.settings.pomodoroTime[task.status];\r\n      updateCurrentTime(time, 0);\r\n      setTime(time*60*1000);\r\n      setIsPlay(false);\r\n    };\r\n\r\n    const handlePause = () => {\r\n      updateCurrentTime(getTime() / (60*1000), 1);\r\n      setIsPlay(false);\r\n      pause();\r\n    };\r\n\r\n    const handleNext = () => {\r\n      nextStatus(setTime);\r\n    };\r\n\r\n    const handleBack = () => {\r\n      backStatus(setTime);\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card className={classes.card} variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography className={classes.timer}>\r\n              <Timer.Minutes />\r\n              {\":\"}\r\n              <Timer.Seconds />\r\n            </Typography>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.buttons}\r\n            >\r\n              <ControlButton\r\n                hide={isPlay}\r\n                icon={RewindIcon}\r\n                click={handleBack}\r\n                nav={{ disabled: task.count == 0 }}\r\n              />\r\n              <ControlButton\r\n                hide={isPlay}\r\n                icon={PlayIcon}\r\n                click={handleStart}\r\n              />\r\n              <ControlButton\r\n                hide={!isPlay}\r\n                icon={PauseIcon}\r\n                click={handlePause}\r\n              />\r\n              <ControlButton\r\n                hide={isPlay}\r\n                icon={ResetIcon}\r\n                click={handleReset}\r\n              />\r\n              <ControlButton\r\n                hide={isPlay}\r\n                icon={ForwardIcon}\r\n                click={handleNext}\r\n                nav={{ disabled: false }}\r\n              />\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  if (error) return <Redirect to=\"/\" />;\r\n\r\n  if (task == undefined) return null;\r\n\r\n  props.setTitle(task.name);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <React.Fragment>\r\n        <Card className={classes.card} variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography variant=\"h4\">{state.settings.statusName[task.status]}</Typography>\r\n            <Typography variant=\"subtitle\" color=\"textSecondary\">\r\n              {state.settings.statusMessage[task.status]}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n        <Timer\r\n          startImmediately={false}\r\n          initialTime={task == undefined ? 0 : task.currentTime*60*1000}\r\n          direction=\"backward\"\r\n          lastUnit=\"m\"\r\n          formatValue={(value) => `${value < 10 ? `0${value}` : value}`}\r\n        >\r\n          {timer}\r\n        </Timer>\r\n        <Chip\r\n          color=\"primary\"\r\n          avatar={<Avatar>{task.count}</Avatar>}\r\n          label=\"Pomodoro\"\r\n          className={classes.count}\r\n        />\r\n      </React.Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Context from \"../../store/Context\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  ButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  PlayArrow as PlayIcon,\r\n  Pause as PauseIcon,\r\n  Replay as ResetIcon,\r\n} from \"@material-ui/icons\";\r\nimport ControlButton from \"../ControlButton\";\r\nimport Timer from \"react-compound-timer\";\r\nimport { showNotif } from \"../../helper/showNotif\";\r\nimport useSound from 'use-sound';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"calc(100vh - 134px)\",\r\n    textAlign: \"center\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n  },\r\n  timer: {\r\n    width: \"100%\",\r\n    fontSize: \"6em\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  buttonGroup: {\r\n    marginTop: \"1.5em\",\r\n  },\r\n  button: {\r\n    lineHeight: 1.2,\r\n  },\r\n}));\r\n\r\nexport default function ManualTimerPage() {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const { state, actions } = React.useContext(Context);\r\n  const manualTimer = state.manualTimer;\r\n  const [isPlay, setIsPlay] = React.useState(false);\r\n  const ended = React.useRef(false);\r\n  const alarm = 'https://mqad21.github.io/pomodoro/assets/alarm.mp3';\r\n  const beep = 'https://mqad21.github.io/pomodoro/assets/beep.mp3';\r\n\r\n  const [play, { stop }] = useSound(alarm);\r\n  const [playBeep, { stopBeeb }] = useSound(beep);\r\n\r\n  const updateCurrentTime = (time, isStart) => {\r\n    if (time < 0) time = 0;\r\n    actions({\r\n      type: \"setState\",\r\n      payload: {\r\n        ...state,\r\n        manualTimer: {\r\n          ...manualTimer,\r\n          currentTime: time,\r\n          isStart: isStart,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const changeStatus = (status) => {\r\n    if (manualTimer.status != status) {\r\n      actions({\r\n        type: \"setState\",\r\n        payload: {\r\n          ...state,\r\n          manualTimer: {\r\n            ...manualTimer,\r\n            status: status,\r\n            currentTime: state.settings.pomodoroTime[status],\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const timer = ({ start, pause, stop, getTime, setTime }) => {\r\n    if (getTime() < 0 && !ended.current) {\r\n      ended.current = true;\r\n      setIsPlay(false);\r\n      showNotif(manualTimer.status, false, state.settings.notif);\r\n      play();\r\n    }\r\n\r\n    const handleStart = () => {\r\n      playBeep();\r\n      ended.current = false;\r\n      start();\r\n      setIsPlay(true);\r\n      showNotif(manualTimer.status, true, state.settings.notif);\r\n    };\r\n\r\n    const handleReset = () => {\r\n      const time = state.settings.pomodoroTime[manualTimer.status];\r\n      updateCurrentTime(time, 0);\r\n      setTime(time*60*1000);\r\n      setIsPlay(false);\r\n    };\r\n\r\n    const handlePause = () => {\r\n      updateCurrentTime(getTime() / (60*1000), 1);\r\n      setIsPlay(false);\r\n      pause();\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card className={classes.card} variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography className={classes.timer}>\r\n              <Timer.Minutes />\r\n              {\":\"}\r\n              <Timer.Seconds />\r\n            </Typography>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              className={classes.buttons}\r\n            >\r\n              <ControlButton\r\n                hide={isPlay}\r\n                icon={PlayIcon}\r\n                click={handleStart}\r\n              />\r\n              <ControlButton\r\n                hide={!isPlay}\r\n                icon={PauseIcon}\r\n                click={handlePause}\r\n              />\r\n              <ControlButton\r\n                hide={isPlay}\r\n                icon={ResetIcon}\r\n                click={handleReset}\r\n              />\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const toPomodoro = () => {\r\n    changeStatus(\"pomodoro\");\r\n  };\r\n\r\n  const toShortBreak = () => {\r\n    changeStatus(\"shortBreak\");\r\n  };\r\n\r\n  const toLongBreak = () => {\r\n    changeStatus(\"longBreak\");\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <Card className={classes.card} variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography variant=\"h4\">\r\n            {state.settings.statusName[manualTimer.status]}\r\n          </Typography>\r\n          <Typography variant=\"subtitle\" color=\"textSecondary\">\r\n            {state.settings.statusMessage[manualTimer.status]}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Timer\r\n        startImmediately={false}\r\n        initialTime={\r\n          manualTimer == undefined ? 0 : manualTimer.currentTime * 60 * 1000\r\n        }\r\n        direction=\"backward\"\r\n        lastUnit=\"m\"\r\n        formatValue={(value) => `${value < 10 ? `0${value}` : value}`}\r\n      >\r\n        {timer}\r\n      </Timer>\r\n      <ButtonGroup\r\n        className={classes.buttonGroup}\r\n        color=\"primary\"\r\n        aria-label=\"outlined primary button group\"\r\n      >\r\n        <Button\r\n          onClick={toPomodoro}\r\n          variant={manualTimer.status == \"pomodoro\" ? \"contained\" : \"outlined\"}\r\n          className={classes.button}\r\n        >\r\n          Pomodoro\r\n        </Button>\r\n        <Button\r\n          onClick={toShortBreak}\r\n          variant={\r\n            manualTimer.status == \"shortBreak\" ? \"contained\" : \"outlined\"\r\n          }\r\n          className={classes.button}\r\n        >\r\n          Short Break\r\n        </Button>\r\n        <Button\r\n          onClick={toLongBreak}\r\n          variant={manualTimer.status == \"longBreak\" ? \"contained\" : \"outlined\"}\r\n          className={classes.button}\r\n        >\r\n          Long Break\r\n        </Button>\r\n      </ButtonGroup>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Grid,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\nimport SmallDialog from \"../SmallDialog\";\r\nimport Context from \"../../store/Context\";\r\n\r\nexport default function SettingsPage(props) {\r\n  props.setTitle(\"Settings\");\r\n  const { state, actions } = React.useContext(Context);\r\n  const [dialogOpen, setDialogOpen] = React.useState(false);\r\n  const [settings, setSettings] = React.useState(null);\r\n  const [darkMode, setDarkMode] = React.useState(false);\r\n\r\n  const handleMenu = (menu) => {\r\n    setSettings(menu);\r\n  };\r\n\r\n  const settingsList = [\r\n    {\r\n      id: \"pomodoro\",\r\n      name: \"pomodoroTime\",\r\n      label: \"Pomodoro Time\",\r\n      valueLabel: state.settings.pomodoroTime[\"pomodoro\"] + \" minutes\",\r\n      value: state.settings.pomodoroTime[\"pomodoro\"],\r\n      fieldType: \"number\",\r\n    },\r\n    {\r\n      id: \"shortBreak\",\r\n      name: \"pomodoroTime\",\r\n      label: \"Short Break Time\",\r\n      valueLabel: state.settings.pomodoroTime[\"shortBreak\"] + \" minutes\",\r\n      value: state.settings.pomodoroTime[\"shortBreak\"],\r\n      fieldType: \"number\",\r\n    },\r\n    {\r\n      id: \"longBreak\",\r\n      name: \"pomodoroTime\",\r\n      label: \"Long Break Time\",\r\n      valueLabel: state.settings.pomodoroTime[\"longBreak\"] + \" minutes\",\r\n      value: state.settings.pomodoroTime[\"longBreak\"],\r\n      fieldType: \"number\",\r\n    },\r\n    {\r\n      id: \"pomodoro\",\r\n      name: \"statusMessage\",\r\n      label: \"Pomodoro Message\",\r\n      valueLabel: state.settings.statusMessage[\"pomodoro\"],\r\n      value: state.settings.statusMessage[\"pomodoro\"],\r\n      fieldType: \"text\",\r\n    },\r\n    {\r\n      id: \"shortBreak\",\r\n      name: \"statusMessage\",\r\n      label: \"Short Break Message\",\r\n      valueLabel: state.settings.statusMessage[\"shortBreak\"],\r\n      value: state.settings.statusMessage[\"shortBreak\"],\r\n      fieldType: \"text\",\r\n    },\r\n    {\r\n      id: \"longBreak\",\r\n      name: \"statusMessage\",\r\n      label: \"Long Break Message\",\r\n      valueLabel: state.settings.statusMessage[\"longBreak\"],\r\n      value: state.settings.statusMessage[\"longBreak\"],\r\n      fieldType: \"text\",\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    if (settings != null) {\r\n      setDialogOpen(true);\r\n    }\r\n  }, [settings]);\r\n\r\n  const handleDarkMode = (e) => {\r\n    actions({\r\n      type: \"setState\",\r\n      payload: {\r\n        ...state,\r\n        settings: {\r\n          ...state.settings,\r\n          darkMode: e.target.checked ? 1 : 0,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const SettingsMenu = () =>\r\n    settingsList.map((setting, idx) => {\r\n      return (\r\n        <React.Fragment>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={setting.label}\r\n              secondary={setting.valueLabel}\r\n              onClick={() => handleMenu(setting)}\r\n            />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n\r\n  const Dialog = () => {\r\n    if (settings == null) {\r\n      return null;\r\n    }\r\n    return (\r\n      <SmallDialog\r\n        open={dialogOpen}\r\n        setOpen={setDialogOpen}\r\n        type=\"settings\"\r\n        settings={settings}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <List>\r\n        <ListItem>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <ListItemText primary=\"Dark Mode\" />\r\n            <Switch\r\n              checked={state.settings.darkMode}\r\n              onChange={handleDarkMode}\r\n              color=\"primary\"\r\n              name=\"darkMode\"\r\n              inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n            />\r\n          </Grid>\r\n        </ListItem>\r\n        <SettingsMenu />\r\n      </List>\r\n      <Dialog />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid, Link } from \"@material-ui/core\";\r\nimport { Favorite as FavoriteIcon } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"calc(100vh - 134px)\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function AboutPage(props) {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  props.setTitle(\"About\");\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <React.Fragment>\r\n        <Typography variant=\"h6\">About Pomodoro Timer</Typography>\r\n        <Typography variant=\"body1\" color=\"textSecondary\">\r\n          Pomodoro Timer is a web app that can assist you to manage your time using pomodoro technique. Thank you for using this app. May Allah bless you :)\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body1\"\r\n          style={{ marginTop: \"2em\" }}\r\n          color=\"textSecondary\"\r\n        >\r\n          Made with <FavoriteIcon fontSize=\"small\" color=\"primary\"/> by <Link href=\"https://instagram.com/mqad21\" variant=\"body1\">\r\n            @mqad21\r\n          </Link>\r\n        </Typography>\r\n      </React.Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport BottomNav from \"./components/layout/BottomNav\";\r\nimport TopBar from \"./components/layout/TopBar\";\r\nimport { Container, Box, CssBaseline } from \"@material-ui/core\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport TaskListPage from \"./components/pages/TaskListPage\";\r\nimport TaskPage from \"./components/pages/TaskPage\";\r\nimport ManualTimerPage from \"./components/pages/ManualTimerPage\";\r\nimport SettingsPage from \"./components/pages/SettingsPage\";\r\nimport AboutPage from \"./components/pages/AboutPage\";\r\nimport Context from \"./store/Context\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    backgroundColor: \"primary\",\r\n    flexGrow: 1,\r\n    marginTop: \"56px\",\r\n    padding: theme.spacing(3),\r\n    paddingBottom: \"56px\",\r\n    minHeight: \"calc(100vh - 56px)\",\r\n  },\r\n  padding0: {\r\n    padding: 0,\r\n  },\r\n  bottomNav: {\r\n    marginTop: \"28px\",\r\n  },\r\n}));\r\n\r\nexport default function Main() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { state, actions } = React.useContext(Context);\r\n  const location = useLocation().pathname.split(\"/\")[1];\r\n  const displayBack = [\"task\", \"settings\", \"about\"].includes(location);\r\n  const [title, setTitle] = React.useState(\"Pomodoro Timer\");\r\n  const [isPlay, setIsPlay] = React.useState(false);\r\n\r\n  const handleClickOutside = () => {\r\n    if (state.selectedTasks.length != 0) {\r\n      actions({\r\n        type: \"setState\",\r\n        payload: {\r\n          ...state,\r\n          selectedTasks: [],\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const Content = (props) => {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <Container\r\n          className={clsx(\r\n            classes.content,\r\n            { [classes.padding0]: location == \"settings\" },\r\n            { [classes.bottomNav]: props.bottomNav }\r\n          )}\r\n          onClick={handleClickOutside}\r\n        >\r\n          <Box my={2}>{props.component}</Box>\r\n        </Container>\r\n        {props.bottomNav ? <BottomNav location={location} /> : null}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getTitle = () => {\r\n    if (![\"\", \"timer\"].includes(location)) {\r\n      return title;\r\n    } else {\r\n      return \"Pomodoro Timer\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TopBar isPlay={isPlay} displayBack={displayBack} title={getTitle()} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Content\r\n            bottomNav={true}\r\n            component={<TaskListPage />}\r\n            noMargin={false}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/timer\">\r\n          <Content\r\n            bottomNav={true}\r\n            component={<ManualTimerPage />}\r\n            noMargin={false}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/task/:id\">\r\n          <Content\r\n            bottomNav={false}\r\n            component={<TaskPage setIsPlay={setIsPlay} setTitle={setTitle} noMargin={false} />}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/settings\">\r\n          <Content\r\n            bottomNav={false}\r\n            component={<SettingsPage setTitle={setTitle} noMargin={true} />}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/about\">\r\n          <Content\r\n            bottomNav={false}\r\n            component={<AboutPage setTitle={setTitle} noMargin={false} />}\r\n          />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Main from \"./Main\";\nimport \"./App.css\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport red from '@material-ui/core/colors/red';\nimport grey from '@material-ui/core/colors/grey';\nimport Context from \"./store/Context\";\n\nfunction App() {\n  const {state} = React.useContext(Context);\n\n  const theme = createMuiTheme({\n    palette: {\n      type: state.settings.darkMode == 1 ? 'dark' : 'light',\n      primary: {\n        main: state.settings.darkMode == 1 ? red[400] : red[600],\n      },\n      secondary: {\n        main: grey[700],\n      },\n    },\n  });\n\n  return (\n    <Router>\n        <ThemeProvider theme={theme}>\n          <Main />\n        </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { useState, useEffect } from \"react\";\r\nimport { useIndexedDB } from \"react-indexed-db\";\r\nimport { initDB } from \"react-indexed-db\";\r\nimport { DBConfig } from \"../config/DBConfig\";\r\n\r\ninitDB(DBConfig);\r\n\r\nexport default function useGlobalState() {\r\n  const { getAll, add, deleteRecord, update } = useIndexedDB(\"tasks\");\r\n\r\n  const settings = JSON.parse(localStorage.getItem(\"settings\")) || {};\r\n\r\n  const pomodoroTimeSetting = settings.pomodoroTime || {};\r\n  const statusMessageSetting = settings.statusMessage || {};\r\n  const darkModeSetting = settings.darkMode || 0;\r\n\r\n  const [state, setState] = useState({\r\n    tasks: [],\r\n    newTask: null,\r\n    oldTaskId: null,\r\n    selectedTasks: [],\r\n    manualTimer: JSON.parse(localStorage.getItem(\"manualTimer\")) || {\r\n      status: \"pomodoro\",\r\n      currentTime: pomodoroTimeSetting[\"pomodoro\"] || 25,\r\n      isStart: 0,\r\n    },\r\n    settings: {\r\n      pomodoroTime: {\r\n        pomodoro: pomodoroTimeSetting[\"pomodoro\"] || 25,\r\n        shortBreak: pomodoroTimeSetting[\"shortBreak\"] || 5,\r\n        longBreak: pomodoroTimeSetting[\"longBreak\"] || 10,\r\n      },\r\n      statusName: {\r\n        pomodoro: \"Pomodoro\",\r\n        shortBreak: \"Short Break\",\r\n        longBreak: \"Long Break\",\r\n      },\r\n      statusMessage: {\r\n        pomodoro: statusMessageSetting[\"pomodoro\"] || \"Let's start and become productive.\",\r\n        shortBreak: statusMessageSetting[\"shortBreak\"] || \"Good job! let's take a short break.\",\r\n        longBreak: statusMessageSetting[\"longBreak\"] || \"Awesome! let's take a long break.\",\r\n      },\r\n      notif: {\r\n        pomodoro: {\r\n          start: {\r\n            title: \"Pomodoro timer is set\",\r\n            body: \"Keep focus, dude!\",\r\n          },\r\n          end: {\r\n            title: \"Pomodoro timer has ended\",\r\n            body: \"Take a break, dude!\",\r\n          },\r\n        },\r\n        shortBreak: {\r\n          start: {\r\n            title: \"Short break timer is set\",\r\n            body: \"Have fun, dude!\",\r\n          },\r\n          end: {\r\n            title: \"Short break timer has ended\",\r\n            body: \"Let's back work!\",\r\n          },\r\n        },\r\n        longBreak: {\r\n          start: {\r\n            title: \"Long break timer is set\",\r\n            body: \"Be happy, dude!\",\r\n          },\r\n          end: {\r\n            title: \"Long break timer has ended\",\r\n            body: \"Keep spirit!\",\r\n          },\r\n        },\r\n      },\r\n      darkMode: darkModeSetting\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"settings\", {\r\n      ...settings,\r\n      darkMode: state.settings.darkMode\r\n    });\r\n  }, [state.settings.darkMode]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"settings\", JSON.stringify(state.settings));\r\n  }, [state.settings]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"manualTimer\", JSON.stringify(state.manualTimer));\r\n  }, [state.manualTimer]);\r\n\r\n  const updateTasks = () => {\r\n    getAll().then((tasks) => {\r\n      for (let i = 0; i < tasks.length; i++) {\r\n        if (tasks[i].isStart == 0) {\r\n          tasks[i].currentTime = state.settings.pomodoroTime[tasks[i].status];\r\n          console.log(state.settings.pomodoroTime[tasks[i].status]);\r\n        }\r\n      }\r\n      const currentTime =\r\n        state.manualTimer.isStart == 0\r\n          ? state.settings.pomodoroTime[state.manualTimer.status]\r\n          : state.manualTimer.currentTime;\r\n      setState({\r\n        ...state,\r\n        tasks: tasks,\r\n        manualTimer: {\r\n          ...state.manualTimer,\r\n          currentTime,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateTasks();\r\n  }, []);\r\n\r\n  //update task\r\n  useEffect(() => {\r\n    if (state.updatedTask != null) {\r\n      console.log({ ...state.updatedTask });\r\n      update({ ...state.updatedTask }).then(\r\n        (event) => {\r\n          console.log(\"ID Generated: \", event.target);\r\n          getAll().then((tasks) => {\r\n            setState({ ...state, updatedTask: null, tasks: tasks });\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  }, [state.updatedTask]);\r\n\r\n  //insert new task\r\n  useEffect(() => {\r\n    if (state.newTask != null) {\r\n      add({ ...state.newTask }).then(\r\n        (event) => {\r\n          console.log(\"ID Generated: \", event.target);\r\n          getAll().then((tasks) => {\r\n            setState({ ...state, newTask: null, tasks: tasks });\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  }, [state.newTask]);\r\n\r\n  //delete task\r\n  useEffect(() => {\r\n    if (state.oldTaskId != null) {\r\n      state.oldTaskId.forEach((taskId) => {\r\n        deleteRecord(taskId);\r\n        getAll().then((tasks) => {\r\n          setState({ ...state, oldTaskId: null, tasks: tasks });\r\n        });\r\n      });\r\n    }\r\n  }, [state.oldTaskId]);\r\n\r\n  const actions = (action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case \"setState\":\r\n        return setState(payload);\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  return { state, actions, updateTasks };\r\n}\r\n","export const DBConfig = {\r\n  name: \"Pomodoro\",\r\n  version: 4,\r\n  objectStoresMeta: [\r\n    {\r\n      store: \"tasks\",\r\n      storeConfig: { keyPath: \"id\", autoIncrement: true },\r\n      storeSchema: [\r\n        { name: \"name\", keypath: \"name\" },\r\n        { name: \"count\", keypath: \"count\" },\r\n        { name: \"currentTime\", keypath: \"currentTime\" },\r\n        { name: \"status\", keypath: \"status\" },\r\n        { name: \"isStart\", keypath: \"isStart\" },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Context from \"./store/Context\";\nimport useGlobalState from \"./store/UseGlobalState\";\n\nconst Index = () => {\n  const store = useGlobalState();\n  return (\n    <Context.Provider value={store}>\n      <App />\n    </Context.Provider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}